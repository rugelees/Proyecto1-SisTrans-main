CREATE TABLE CIUDAD (
    nombre VARCHAR2(100) PRIMARY KEY
);

CREATE TABLE USUARIO (
    cedula NUMBER(10) PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    correo VARCHAR2(100) NOT NULL UNIQUE,
    celular VARCHAR2(20),
    rol VARCHAR2(20) NOT NULL,
    CONSTRAINT chk_usuario_rol CHECK (rol IN ('SERVICIOS', 'CONDUCTOR'))
);

CREATE TABLE TARJETA_CREDITO (
    usuario_cedula NUMBER(10) PRIMARY KEY,
    numero VARCHAR2(20) NOT NULL UNIQUE,
    nombre_tarjeta VARCHAR2(100) NOT NULL,
    fecha_vencimiento DATE NOT NULL,
    codigo_seguridad VARCHAR2(4) NOT NULL,
    CONSTRAINT fk_tarjeta_usuario FOREIGN KEY (usuario_cedula) REFERENCES USUARIO(cedula)
);

CREATE TABLE VEHICULO (
    placa VARCHAR2(10) PRIMARY KEY,
    tipo VARCHAR2(50) NOT NULL,
    marca VARCHAR2(50),
    modelo NUMBER(4),
    color VARCHAR2(30),
    ciudad_placa VARCHAR2(100),
    capacidad_pasajero NUMBER,
    nivel_transporte VARCHAR2(20),
    cedula_dueño NUMBER(10) NOT NULL,
    CONSTRAINT fk_vehiculo_conductor FOREIGN KEY (cedula_dueño) REFERENCES USUARIO(cedula),
    CONSTRAINT chk_vehiculo_tipo CHECK (tipo IN ('carro', 'camioneta', 'motocicleta', 'PICKUP')),
    CONSTRAINT chk_vehiculo_nivel CHECK (nivel_transporte IN ('ESTANDAR', 'CONFORT', 'LARGE'))
);

CREATE TABLE PUNTO_TRAYECTO (
    id_punto NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    direccion VARCHAR2(255) NOT NULL,
    ciudad VARCHAR2(100) NOT NULL,
    coordenadas VARCHAR2(100),
    tipo_punto VARCHAR2(50),
    CONSTRAINT fk_punto_ciudad FOREIGN KEY (ciudad) REFERENCES CIUDAD(nombre)
);

CREATE TABLE SERVICIO (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    fecha_hora_inicio TIMESTAMP,
    fecha_hora_fin TIMESTAMP,
    distancia VARCHAR2(50),
    costo_total NUMBER,
    tipo VARCHAR2(20) NOT NULL,
    cedula_solicitante NUMBER(10) NOT NULL,
    cedula_conductor NUMBER(10),
    placa_vehiculo VARCHAR2(10),
    id_punto_partida NUMBER NOT NULL,
    tarjeta_credito VARCHAR2(20) NOT NULL,
    CONSTRAINT fk_servicio_solicitante FOREIGN KEY (cedula_solicitante) REFERENCES USUARIO(cedula),
    CONSTRAINT fk_servicio_conductor FOREIGN KEY (cedula_conductor) REFERENCES USUARIO(cedula),
    CONSTRAINT fk_servicio_vehiculo FOREIGN KEY (placa_vehiculo) REFERENCES VEHICULO(placa),
    CONSTRAINT fk_servicio_partida FOREIGN KEY (id_punto_partida) REFERENCES PUNTO_TRAYECTO(id_punto),
    CONSTRAINT fk_servicio_tarjeta FOREIGN KEY (tarjeta_credito) REFERENCES TARJETA_CREDITO(numero)
);

CREATE TABLE DESTINOS_SERVICIO (
    id_servicio NUMBER,
    id_punto_destino NUMBER,
    orden NUMBER DEFAULT 1,
    PRIMARY KEY (id_servicio, id_punto_destino),
    CONSTRAINT fk_destinos_servicio FOREIGN KEY (id_servicio) REFERENCES SERVICIO(id),
    CONSTRAINT fk_destinos_punto FOREIGN KEY (id_punto_destino) REFERENCES PUNTO_TRAYECTO(id_punto)
);

CREATE TABLE TRANSPORTE_PASAJEROS (
    servicio_id NUMBER PRIMARY KEY,
    nivel VARCHAR2(20),
    CONSTRAINT fk_tp_servicio FOREIGN KEY (servicio_id) REFERENCES SERVICIO(id)
);

CREATE TABLE ENTREGA_COMIDA (
    servicio_id NUMBER PRIMARY KEY,
    nombre_restaurante VARCHAR2(100) NOT NULL,
    CONSTRAINT fk_ec_servicio FOREIGN KEY (servicio_id) REFERENCES SERVICIO(id)
);

CREATE TABLE TRANSPORTE_MERCANCIA (
    servicio_id NUMBER PRIMARY KEY,
    carga NUMBER,
    CONSTRAINT fk_tm_servicio FOREIGN KEY (servicio_id) REFERENCES SERVICIO(id)
);

CREATE TABLE DISPONIBILIDAD (
    id_disponibilidad NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    dia DATE NOT NULL,
    franja_horaria VARCHAR2(50) NOT NULL,
    tipo_transporte VARCHAR2(50) NOT NULL
);

CREATE TABLE RESEÑA (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    evaluacion_num NUMBER(1) NOT NULL,
    comentario VARCHAR2(500),
    cedula_autor NUMBER(10) NOT NULL,
    cedula_evaluado NUMBER(10) NOT NULL,
    id_servicio NUMBER NOT NULL,
    CONSTRAINT fk_reseña_autor FOREIGN KEY (cedula_autor) REFERENCES USUARIO(cedula),
    CONSTRAINT fk_reseña_evaluado FOREIGN KEY (cedula_evaluado) REFERENCES USUARIO(cedula),
    CONSTRAINT fk_reseña_servicio FOREIGN KEY (id_servicio) REFERENCES SERVICIO(id),
    CONSTRAINT chk_reseña_evaluacion CHECK (evaluacion_num BETWEEN 0 AND 5)
);

COMMIT;
