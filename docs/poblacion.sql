BEGIN
    INSERT INTO CIUDAD (nombre) VALUES ('Bogotá');
    INSERT INTO CIUDAD (nombre) VALUES ('Medellín');
    INSERT INTO CIUDAD (nombre) VALUES ('Cali');
EXCEPTION WHEN OTHERS THEN NULL;
END;
/
BEGIN
    FOR i IN 1..20 LOOP
        BEGIN
            INSERT INTO PUNTO_TRAYECTO (id_punto, direccion, ciudad)
            VALUES (i, 'Dirección Controlada ' || i, 'Bogotá');
        EXCEPTION WHEN OTHERS THEN NULL;
        END;
    END LOOP;
END;
/
DECLARE
    v_max_id NUMBER;
    v_seq_name VARCHAR2(128);
BEGIN
    SELECT NVL(MAX(id_punto), 0) INTO v_max_id FROM PUNTO_TRAYECTO;
    
    SELECT sequence_name INTO v_seq_name 
    FROM user_tab_identity_cols 
    WHERE table_name = 'PUNTO_TRAYECTO' 
    AND column_name = 'ID_PUNTO';
    
    EXECUTE IMMEDIATE 'ALTER TABLE PUNTO_TRAYECTO MODIFY id_punto GENERATED BY DEFAULT AS IDENTITY (START WITH ' || (v_max_id + 1) || ' INCREMENT BY 1)';
    
    DBMS_OUTPUT.PUT_LINE('Secuencia de PUNTO_TRAYECTO sincronizada en: ' || (v_max_id + 1));
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Advertencia sincronizando PUNTO_TRAYECTO: ' || SQLERRM);
END;
/
BEGIN
    FOR i IN 1..100 LOOP
        BEGIN
            INSERT INTO USUARIO (cedula, nombre, correo, celular, rol)
            VALUES (1000 + i, 'Conductor ' || i, 'conductor' || i || '@alpescab.com', '31000000' || LPAD(i, 2, '0'), 'CONDUCTOR');
        EXCEPTION WHEN OTHERS THEN NULL;
        END;
    END LOOP;
END;
/
BEGIN
    FOR i IN 1..100 LOOP
        BEGIN
            INSERT INTO VEHICULO (placa, tipo, marca, modelo, color, ciudad_placa, capacidad_pasajero, nivel_transporte, cedula_dueño)
            VALUES ('AUT' || LPAD(i, 3, '0'), 'carro', 'Marca' || MOD(i, 5), 2020 + MOD(i, 4), 'Color' || MOD(i, 3), 'Bogotá', 4, 'ESTANDAR', 1000 + i);
        EXCEPTION WHEN OTHERS THEN NULL;
        END;
    END LOOP;
END;
/
BEGIN
    FOR i IN 1..200 LOOP
        BEGIN
            INSERT INTO USUARIO (cedula, nombre, correo, celular, rol)
            VALUES (2000 + i, 'Pasajero ' || i, 'pasajero' || i || '@email.com', '32000000' || LPAD(i, 2, '0'), 'SERVICIOS');
        EXCEPTION WHEN OTHERS THEN NULL;
        END;

        BEGIN
            INSERT INTO TARJETA_CREDITO (usuario_cedula, numero, nombre_tarjeta, fecha_vencimiento, codigo_seguridad)
            VALUES (2000 + i, LPAD(2000 + i, 16, '4'), 'Pasajero ' || i, TO_DATE('2029-01-01', 'YYYY-MM-DD'), LPAD(i, 3, '1'));
        EXCEPTION WHEN OTHERS THEN NULL;
        END;
    END LOOP;
END;
/
COMMIT;

DECLARE
  v_max_id NUMBER := 0;
  v_seq_name VARCHAR2(30) := 'SERVICIO_SEQ';
  v_exists NUMBER := 0;
  v_curval NUMBER;
  v_delta NUMBER;
BEGIN
  SELECT NVL(MAX(id),0) INTO v_max_id FROM SERVICIO;

  SELECT COUNT(*) INTO v_exists FROM user_sequences WHERE sequence_name = v_seq_name;
  IF v_exists = 1 THEN
    EXECUTE IMMEDIATE 'DROP SEQUENCE ' || v_seq_name;
  END IF;

  EXECUTE IMMEDIATE 'CREATE SEQUENCE ' || v_seq_name || ' START WITH ' || (v_max_id + 1) || ' INCREMENT BY 1 NOCACHE';

  SELECT COUNT(*) INTO v_exists FROM user_triggers WHERE trigger_name = 'SERVICIO_BI';
  IF v_exists = 1 THEN
    EXECUTE IMMEDIATE 'DROP TRIGGER SERVICIO_BI';
  END IF;

  EXECUTE IMMEDIATE '
    CREATE OR REPLACE TRIGGER SERVICIO_BI
    BEFORE INSERT ON SERVICIO
    FOR EACH ROW
    BEGIN
      IF :NEW.ID IS NULL THEN
        :NEW.ID := SERVICIO_SEQ.NEXTVAL;
      END IF;
    END;';
END;
/
COMMIT;

DECLARE
  v_id           NUMBER;
  v_ced_conductor NUMBER;
  v_ced_pasajero NUMBER;
  v_placa         VARCHAR2(10);
  v_tarjeta       VARCHAR2(20);
  v_partida       NUMBER;
  v_destino       NUMBER;
BEGIN
  FOR i IN 1..200 LOOP
    v_ced_conductor := 1000 + MOD(i-1, 100) + 1; -- 1001..1100
    v_ced_pasajero := 2000 + MOD(i-1, 200) + 1;  -- 2001..2200
    v_placa := 'AUT' || LPAD(MOD(i-1, 100) + 1, 3, '0'); -- AUT001..AUT100
    v_partida := MOD(i, 20) + 1;
    v_destino := MOD(i + 5, 20) + 1;

    SELECT numero INTO v_tarjeta FROM TARJETA_CREDITO WHERE usuario_cedula = v_ced_pasajero;

    INSERT INTO SERVICIO (id, fecha_hora_inicio, fecha_hora_fin, costo_total, tipo, cedula_solicitante, cedula_conductor, placa_vehiculo, id_punto_partida, tarjeta_credito)
    VALUES (i, SYSTIMESTAMP - (30 - MOD(i, 30))/24.0, SYSTIMESTAMP - (29 - MOD(i, 30))/24.0, 15000 + (MOD(i, 10) * 1000),
            'TRANSPORTE_PASAJEROS', v_ced_pasajero, v_ced_conductor, v_placa, v_partida, v_tarjeta);

    INSERT INTO DESTINOS_SERVICIO (id_servicio, id_punto_destino) VALUES (i, v_destino);
    INSERT INTO TRANSPORTE_PASAJEROS (servicio_id, nivel) VALUES (i, 'ESTANDAR');
  END LOOP;
  
  DBMS_OUTPUT.PUT_LINE('200 servicios creados con IDs 1-200');
END;
/
COMMIT;

COMMIT;

DECLARE
  v_tarjeta VARCHAR2(20);
BEGIN
  SELECT numero INTO v_tarjeta FROM TARJETA_CREDITO WHERE usuario_cedula = 2101;
  INSERT INTO SERVICIO (id, fecha_hora_inicio, fecha_hora_fin, costo_total, tipo, cedula_solicitante, cedula_conductor, placa_vehiculo, id_punto_partida, tarjeta_credito)
  VALUES (201, SYSTIMESTAMP, NULL, 0, 'TRANSPORTE_PASAJEROS', 2101, 1001, 'AUT001', 1, v_tarjeta);
  INSERT INTO DESTINOS_SERVICIO (id_servicio, id_punto_destino) VALUES (201, 2);
  INSERT INTO TRANSPORTE_PASAJEROS (servicio_id, nivel) VALUES (201, 'ESTANDAR');
  
  SELECT numero INTO v_tarjeta FROM TARJETA_CREDITO WHERE usuario_cedula = 2102;
  INSERT INTO SERVICIO (id, fecha_hora_inicio, fecha_hora_fin, costo_total, tipo, cedula_solicitante, cedula_conductor, placa_vehiculo, id_punto_partida, tarjeta_credito)
  VALUES (202, SYSTIMESTAMP, NULL, 0, 'TRANSPORTE_PASAJEROS', 2102, 1002, 'AUT002', 3, v_tarjeta);
  INSERT INTO DESTINOS_SERVICIO (id_servicio, id_punto_destino) VALUES (202, 4);
  INSERT INTO TRANSPORTE_PASAJEROS (servicio_id, nivel) VALUES (202, 'ESTANDAR');
  
  SELECT numero INTO v_tarjeta FROM TARJETA_CREDITO WHERE usuario_cedula = 2103;
  INSERT INTO SERVICIO (id, fecha_hora_inicio, fecha_hora_fin, costo_total, tipo, cedula_solicitante, cedula_conductor, placa_vehiculo, id_punto_partida, tarjeta_credito)
  VALUES (203, SYSTIMESTAMP, NULL, 0, 'TRANSPORTE_PASAJEROS', 2103, 1003, 'AUT003', 5, v_tarjeta);
  INSERT INTO DESTINOS_SERVICIO (id_servicio, id_punto_destino) VALUES (203, 6);
  INSERT INTO TRANSPORTE_PASAJEROS (servicio_id, nivel) VALUES (203, 'ESTANDAR');
  
  DBMS_OUTPUT.PUT_LINE('3 servicios abiertos creados (201-203) para RF9');
END;
/
COMMIT;

DECLARE
  v_max_id NUMBER;
  v_seq_name VARCHAR2(30) := 'SERVICIO_SEQ';
  v_exists NUMBER;
BEGIN
  SELECT NVL(MAX(id), 0) INTO v_max_id FROM SERVICIO;
  
  SELECT COUNT(*) INTO v_exists FROM user_sequences WHERE sequence_name = v_seq_name;
  IF v_exists = 1 THEN
    EXECUTE IMMEDIATE 'DROP SEQUENCE ' || v_seq_name;
  END IF;
  
  EXECUTE IMMEDIATE 'CREATE SEQUENCE ' || v_seq_name || ' START WITH ' || (v_max_id + 1) || ' INCREMENT BY 1 NOCACHE';
  
  DBMS_OUTPUT.PUT_LINE('Secuencia SERVICIO_SEQ sincronizada en: ' || (v_max_id + 1));
END;
/
COMMIT;

UPDATE SERVICIO SET fecha_hora_fin = SYSTIMESTAMP WHERE fecha_hora_fin IS NULL AND id NOT IN (201, 202, 203);
COMMIT;